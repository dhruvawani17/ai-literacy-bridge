rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() &&
             firestore.exists(/databases/(default)/documents/admins/$(request.auth.uid));
    }

    // Study materials uploaded by users
    match /study-materials/{userId}/{fileName} {
      // Users can upload their own study materials
      allow create: if isOwner(userId);

      // Users can read their own study materials
      allow read: if isOwner(userId) || isAdmin();

      // Only owners can update/delete their files
      allow update, delete: if isOwner(userId) || isAdmin();
    }

    // Chat file attachments
    match /chat-attachments/{chatId}/{fileName} {
      // Allow read/write for chat participants
      allow read, write: if isSignedIn() &&
        firestore.exists(/databases/(default)/documents/chats/$(chatId)) &&
        request.auth.uid in firestore.get(/databases/(default)/documents/chats/$(chatId)).data.participants;
    }

    // Profile images
    match /profile-images/{userId}/{fileName} {
      allow read: if true; // Public read for profile images
      allow create, update, delete: if isOwner(userId) || isAdmin();
    }

    // Default deny for any other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}